%DAE_model.m
%Differential-algebraic equations model
%for 2-box coupled spring model

% --> +F
%o------o------o
%|      |      |
%|======|======|
%|      |      |
%o------o------o

%parameters
tau = 5; %k/xi
delX = 1;
a = 1;

% spring equations
% xi x1_D' = k(|x1_D-x2_D| - ?x) (in x2_d-x1_D direction)
% xi x2_D' = -k(|x1_D-x2_D| - ?x) + k(|x2_D-x3_D| - ?x)
% xi x3_D' = -k(|x2_D-x3_D| - ?x)
% xi x1_V' = k(|x1_V-x2_V| - ?x)
% xi x2_V' = -k(|x1_V-x2_V| - ?x) + k(|x2_V-x3_V| - ?x)
% xi x3_V' = -k(|x2_V-x3_V| - ?x)

% constraints
% |xi_D - xi_V| = 2a, i=1,2,3
% 1/2(|x1_D + x1_V - (x2_D +x2_V)|) = ?x
% 1/2(|x2_D + x2_V - (x3_D +x3_V)|) = ?x

DAE_system = @(t,X) [...
    %DORSAL POINTS   
    tau*(((X(1)- X(3))^2 + (X(2)- X(4))^2)^(1/2) - delX)*(X(3)-X(1)); ...
    tau*(((X(1)- X(3))^2 + (X(2)- X(4))^2)^(1/2) - delX)*(X(4)-X(2)); ...
    -tau*(((X(1)- X(3))^2 + (X(2)- X(4))^2)^(1/2) - delX)*(X(3)-X(1)) + ...
    tau*(((X(5)- X(3))^2 + (X(6)- X(4))^2)^(1/2) - delX)*(X(5)-X(3)); ...
    -tau*(((X(1)- X(3))^2 + (X(2)- X(4))^2)^(1/2) - delX)*(X(4)-X(2)) + ...
    tau*(((X(5)- X(3))^2 + (X(6)- X(4))^2)^(1/2) - delX)*(X(6)-X(4)); ...
    -tau*(((X(5)- X(3))^2 + (X(6)- X(4))^2)^(1/2) - delX)*(X(5)-X(3)); ...
    -tau*(((X(5)- X(3))^2 + (X(6)- X(4))^2)^(1/2) - delX)*(X(6)-X(4)); ...
    %VENTRAL
    tau*(((X(7)- X(9))^2 + (X(8)- X(10))^2)^(1/2) - delX)*(X(9)-X(7)); ...
    tau*(((X(7)- X(9))^2 + (X(8)- X(10))^2)^(1/2) - delX)*(X(10)-X(8)); ...
    -tau*(((X(7)- X(9))^2 + (X(8)- X(10))^2)^(1/2) - delX)*(X(9)-X(7)) + ...
    tau*(((X(11)- X(9))^2 + (X(12)- X(10))^2)^(1/2) - delX)*(X(11)-X(9)); ...
    -tau*(((X(7)- X(9))^2 + (X(8)- X(10))^2)^(1/2) - delX)*(X(10)-X(8)) + ...
    tau*(((X(11)- X(9))^2 + (X(12)- X(10))^2)^(1/2) - delX)*(X(12)-X(10)); ...
    -tau*(((X(11)- X(9))^2 + (X(12)- X(10))^2)^(1/2) - delX)*(X(11)-X(9)); ...
    -tau*(((X(11)- X(9))^2 + (X(12)- X(10))^2)^(1/2) - delX)*(X(12)-X(10)); ...
    %CONSTRAINTS
    ((X(1)- X(7))^2 + (X(2)- X(8))^2)^(1/2) - 2*a; ...
       ((X(3)- X(9))^2 + (X(4)- X(10))^2)^(1/2) - 2*a; ...
       ((X(5)- X(11))^2 + (X(6)- X(12))^2)^(1/2) - 2*a; ...
       ((X(1) + X(7) - X(3) - X(9))^2 + (X(2) + X(8) - X(4) - X(10))^2)^(1/2) - 2*delX;...
       ((X(3) + X(9) - X(5) - X(11))^2 + (X(4) + X(10) - X(6) - X(12))^2)^(1/2) - 2*delX;];
   
Mass_matrix = zeros(17,17);
for ii =1:12
    Mass_matrix(ii,ii) = 1;
end

%initial conditions - initial contraction on one side?
y0 = [0; 1; 1.5; 1; 2.5; 1; 0; -1; 0.5; -1; 1.5; -1; 0; 0; 0; 0; 0;];

options = odeset('Mass',Mass_matrix,'RelTol',1e-4);
[t,y] = ode15s(DAE_system,[0 100],y0,options);
